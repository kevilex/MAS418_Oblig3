cmake_minimum_required(VERSION 3.8)
project(crane_cpp)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(rcl_interfaces REQUIRED)


find_library(
    LIBADS_LIBRARY
    NAMES AdsLib
    HINTS "../../ADS/build"
)

add_executable(talker src/publisher_member_function.cpp)
add_executable(listener src/subscriber_member_function.cpp)
add_executable(ads_node src/ads_node.cpp)

target_link_libraries(talker PUBLIC rclcpp std_msgs sensor_msgs ${LIBADS_LIBRARY} Threads::Threads rcl_interfaces)
target_link_libraries(listener PUBLIC rclcpp std_msgs rcl_interfaces)
target_link_libraries(ads_node PUBLIC rclcpp std_msgs sensor_msgs ${LIBADS_LIBRARY} Threads::Threads rcl_interfaces)

target_compile_features(ads_node PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17
target_compile_features(talker PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

target_include_directories(talker PUBLIC
$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
$<INSTALL_INTERFACE:include>
${sensor_msgs_INCLUDE_DIRS}
${rclcpp_INCLUDE_DIRS}
${rcl_interfaces_INCLUDE_DIRS}
PRIVATE "../../ADS/AdsLib")

target_include_directories(listener PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  ${sensor_msgs_INCLUDE_DIRS}
  ${rclcpp_INCLUDE_DIRS}
  ${rcl_interfaces_INCLUDE_DIRS})

target_include_directories(ads_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  PRIVATE "../../ADS/AdsLib")

install(TARGETS ads_node
  talker
  listener
  DESTINATION lib/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
